/**
 * @fileoverview gRPC-Web generated client stub for Profile
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.20.1
// source: src/Profile/profile.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as src_Profile_profile_pb from '../../src/Profile/profile_pb';


export class RhanovServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorDoGenderRead = new grpcWeb.MethodDescriptor(
    '/Profile.RhanovService/DoGenderRead',
    grpcWeb.MethodType.UNARY,
    src_Profile_profile_pb.GenderReadRequest,
    src_Profile_profile_pb.GenderReadResponse,
    (request: src_Profile_profile_pb.GenderReadRequest) => {
      return request.serializeBinary();
    },
    src_Profile_profile_pb.GenderReadResponse.deserializeBinary
  );

  doGenderRead(
    request: src_Profile_profile_pb.GenderReadRequest,
    metadata: grpcWeb.Metadata | null): Promise<src_Profile_profile_pb.GenderReadResponse>;

  doGenderRead(
    request: src_Profile_profile_pb.GenderReadRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: src_Profile_profile_pb.GenderReadResponse) => void): grpcWeb.ClientReadableStream<src_Profile_profile_pb.GenderReadResponse>;

  doGenderRead(
    request: src_Profile_profile_pb.GenderReadRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: src_Profile_profile_pb.GenderReadResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Profile.RhanovService/DoGenderRead',
        request,
        metadata || {},
        this.methodDescriptorDoGenderRead,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Profile.RhanovService/DoGenderRead',
    request,
    metadata || {},
    this.methodDescriptorDoGenderRead);
  }

  methodDescriptorDoCustomerCreate = new grpcWeb.MethodDescriptor(
    '/Profile.RhanovService/DoCustomerCreate',
    grpcWeb.MethodType.UNARY,
    src_Profile_profile_pb.CustomerCreateRequest,
    src_Profile_profile_pb.CustomerReadResponse,
    (request: src_Profile_profile_pb.CustomerCreateRequest) => {
      return request.serializeBinary();
    },
    src_Profile_profile_pb.CustomerReadResponse.deserializeBinary
  );

  doCustomerCreate(
    request: src_Profile_profile_pb.CustomerCreateRequest,
    metadata: grpcWeb.Metadata | null): Promise<src_Profile_profile_pb.CustomerReadResponse>;

  doCustomerCreate(
    request: src_Profile_profile_pb.CustomerCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: src_Profile_profile_pb.CustomerReadResponse) => void): grpcWeb.ClientReadableStream<src_Profile_profile_pb.CustomerReadResponse>;

  doCustomerCreate(
    request: src_Profile_profile_pb.CustomerCreateRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: src_Profile_profile_pb.CustomerReadResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Profile.RhanovService/DoCustomerCreate',
        request,
        metadata || {},
        this.methodDescriptorDoCustomerCreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Profile.RhanovService/DoCustomerCreate',
    request,
    metadata || {},
    this.methodDescriptorDoCustomerCreate);
  }

  methodDescriptorDoCustomerRead = new grpcWeb.MethodDescriptor(
    '/Profile.RhanovService/DoCustomerRead',
    grpcWeb.MethodType.UNARY,
    src_Profile_profile_pb.CustomerReadRequest,
    src_Profile_profile_pb.CustomerReadResponse,
    (request: src_Profile_profile_pb.CustomerReadRequest) => {
      return request.serializeBinary();
    },
    src_Profile_profile_pb.CustomerReadResponse.deserializeBinary
  );

  doCustomerRead(
    request: src_Profile_profile_pb.CustomerReadRequest,
    metadata: grpcWeb.Metadata | null): Promise<src_Profile_profile_pb.CustomerReadResponse>;

  doCustomerRead(
    request: src_Profile_profile_pb.CustomerReadRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: src_Profile_profile_pb.CustomerReadResponse) => void): grpcWeb.ClientReadableStream<src_Profile_profile_pb.CustomerReadResponse>;

  doCustomerRead(
    request: src_Profile_profile_pb.CustomerReadRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: src_Profile_profile_pb.CustomerReadResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Profile.RhanovService/DoCustomerRead',
        request,
        metadata || {},
        this.methodDescriptorDoCustomerRead,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Profile.RhanovService/DoCustomerRead',
    request,
    metadata || {},
    this.methodDescriptorDoCustomerRead);
  }

  methodDescriptorDoBusListRead = new grpcWeb.MethodDescriptor(
    '/Profile.RhanovService/DoBusListRead',
    grpcWeb.MethodType.UNARY,
    src_Profile_profile_pb.BusReadRequest,
    src_Profile_profile_pb.BusReadListResponse,
    (request: src_Profile_profile_pb.BusReadRequest) => {
      return request.serializeBinary();
    },
    src_Profile_profile_pb.BusReadListResponse.deserializeBinary
  );

  doBusListRead(
    request: src_Profile_profile_pb.BusReadRequest,
    metadata: grpcWeb.Metadata | null): Promise<src_Profile_profile_pb.BusReadListResponse>;

  doBusListRead(
    request: src_Profile_profile_pb.BusReadRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: src_Profile_profile_pb.BusReadListResponse) => void): grpcWeb.ClientReadableStream<src_Profile_profile_pb.BusReadListResponse>;

  doBusListRead(
    request: src_Profile_profile_pb.BusReadRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: src_Profile_profile_pb.BusReadListResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/Profile.RhanovService/DoBusListRead',
        request,
        metadata || {},
        this.methodDescriptorDoBusListRead,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/Profile.RhanovService/DoBusListRead',
    request,
    metadata || {},
    this.methodDescriptorDoBusListRead);
  }

}

